{"version":3,"sources":["components/ExpCalc.js","App.js","reportWebVitals.js","index.js"],"names":["exp","level","Math","round","ExpCalc","props","state","current","target","required","daily","days","handleCurrent","bind","handleTarget","handleDaily","handleChange","handleSubmit","event","this","setState","value","console","log","calculateExp","preventDefault","onSubmit","onChange","type","toLocaleString","React","Component","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAkGA,SAASA,EAAIC,GACX,OAAOC,KAAKC,MAAO,GAAK,EAAKF,EAAQA,EAAQA,EAAS,IAAMA,EAAQA,EAAW,IAAM,EAAKA,EAAS,KAGtFG,M,kDAnGb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,QAAS,EACTC,OAAQ,EACRC,SAAU,EACVC,MAAO,EACPC,KAAM,GAGR,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBACnB,EAAKG,aAAe,EAAKA,aAAaH,KAAlB,gBACpB,EAAKI,aAAe,EAAKA,aAAaJ,KAAlB,gBAdH,E,iDAiBnB,SAAcK,GACZC,KAAKC,SAAS,CAAEb,QAASW,EAAMV,OAAOa,U,0BAGxC,SAAaH,GACXC,KAAKC,SAAS,CAAEZ,OAAQU,EAAMV,OAAOa,U,yBAGvC,SAAYH,GACVC,KAAKC,SAAS,CAAEV,MAAOQ,EAAMV,OAAOa,U,0BAGtC,SAAaH,GACXC,KAAKC,SAAS,CAAEX,SAAUS,EAAMV,OAAOa,U,0BAGzC,WACEC,QAAQC,IAAIJ,KAAKb,OACjB,IAAIG,EAAWT,EAAImB,KAAKb,MAAME,QAAUR,EAAImB,KAAKb,MAAMC,SAEvDY,KAAKC,SAAS,CAACT,KAAMF,EAASU,KAAKb,MAAMI,QAAQ,WAC/CS,KAAKC,SAAS,CAACX,SAAUA,S,0BAI7B,SAAaS,GACXC,KAAKK,eACLN,EAAMO,mB,oBAGR,WACE,OACE,gCACE,uBAAMC,SAAUP,KAAKF,aAArB,UACE,kDAEE,uBAAOI,MAAOF,KAAKb,MAAMC,QAASoB,SAAUR,KAAKP,mBAGnD,sBAEA,iDAEE,uBAAOS,MAAOF,KAAKb,MAAME,OAAQmB,SAAUR,KAAKL,kBAGlD,sBAEA,8CAEE,uBAAOO,MAAOF,KAAKb,MAAMI,MAAOiB,SAAUR,KAAKJ,iBAGjD,sBAEA,uBAAOa,KAAK,SAASP,MAAM,cAvB/B,gBA0BgBF,KAAKb,MAAMG,SAASoB,iBAClC,sBA3BF,wBA4BwBV,KAAKb,MAAME,OA5BnC,OA4B+CW,KAAKb,MAAMK,KA5B1D,c,+BAkCJ,WACEQ,KAAKC,SAAS,CACZb,QAAS,EACTC,OAAQ,EACRC,SAAU,EACVC,MAAO,IACPC,KAAM,GACLQ,KAAKK,kB,GA3FUM,IAAMC,WCWbC,MAVf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,EAAD,SCKOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.590e1b3c.chunk.js","sourcesContent":["import React from 'react';\n\nclass ExpCalc extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: 0,\n      target: 0,\n      required: 0,\n      daily: 0,\n      days: 0\n    };\n\n    this.handleCurrent = this.handleCurrent.bind(this);\n    this.handleTarget = this.handleTarget.bind(this);\n    this.handleDaily = this.handleDaily.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleCurrent(event) {\n    this.setState({ current: event.target.value })\n  }\n\n  handleTarget(event) {\n    this.setState({ target: event.target.value });\n  }\n\n  handleDaily(event) {\n    this.setState({ daily: event.target.value });\n  }\n\n  handleChange(event) {\n    this.setState({ required: event.target.value });\n  }\n\n  calculateExp() {\n    console.log(this.state)\n    var required = exp(this.state.target) - exp(this.state.current)\n\n    this.setState({days: required/this.state.daily}, function() {\n      this.setState({required: required})\n    })\n  }\n\n  handleSubmit(event) {\n    this.calculateExp();\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Current level \n            <input value={this.state.current} onChange={this.handleCurrent} />\n          </label>\n\n          <p />\n\n          <label>\n            Target level \n            <input value={this.state.target} onChange={this.handleTarget} />\n          </label>\n\n          <p />\n\n          <label>\n            Daily Exp \n            <input value={this.state.daily} onChange={this.handleDaily} />\n          </label>\n\n          <p />\n\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n\n        Missing exp: {this.state.required.toLocaleString()}\n        <p/>\n        You will reach level {this.state.target} in {this.state.days} days.\n\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    this.setState({\n      current: 1,\n      target: 8,\n      required: 0,\n      daily: 2000,\n      days: 0\n    }, this.calculateExp);\n  }\n}\n\n\nfunction exp(level) {\n  return Math.round((50 / 3) * level * level * level - (100 * level * level) + ((850 / 3) * level) - 200);\n}\n\nexport default ExpCalc;\n","import './App.css';\nimport ExpCalc from './components/ExpCalc.js'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <ExpCalc></ExpCalc>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}